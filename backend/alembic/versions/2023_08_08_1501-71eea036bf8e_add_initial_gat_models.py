"""

add initial GAT models

Revision ID: 71eea036bf8e
Revises: eccafcd01de8
Create Date: 2023-08-08 15:01:16.391778

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '71eea036bf8e'
down_revision = 'eccafcd01de8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('course_conflicts_of_interest',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('grader_email', sa.String(), nullable=False),
    sa.Column('student_email', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_id', 'grader_email', 'student_email')
    )
    op.create_table('course_grading_assignments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('assessment_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('INSTRUCTOR', 'TA', 'STUDENT', name='courserole'), nullable=False),
    sa.Column('grading_hours', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_id', 'email')
    )
    op.create_table('course_grading_assignment_pairs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_grading_assignment_id', sa.Integer(), nullable=False),
    sa.Column('grader_email', sa.String(), nullable=False),
    sa.Column('student_email', sa.String(), nullable=False),
    sa.Column('submission_url', sa.String(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['course_grading_assignment_id'], ['course_grading_assignments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_grading_assignment_id', 'grader_email', 'student_email')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('course_grading_assignment_pairs')
    op.drop_table('course_users')
    op.drop_table('course_grading_assignments')
    op.drop_table('course_conflicts_of_interest')
    op.drop_table('courses')
    # ### end Alembic commands ###
